<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Jdenticon</name>
  </assembly>
  <members>
    <member name="T:Jdenticon.ExportImageFormat">
      <summary>
            Specifies the file format of an identicon.
            </summary>
    </member>
    <member name="F:Jdenticon.ExportImageFormat.Png">
      <summary>
            Generates a PNG raster image.
            </summary>
    </member>
    <member name="F:Jdenticon.ExportImageFormat.Svg">
      <summary>
            Generates an SVG vector image.
            </summary>
    </member>
    <member name="T:Jdenticon.HashGenerator">
      <summary>
            Helper class for generating hashes for any values.
            </summary>
    </member>
    <member name="M:Jdenticon.HashGenerator.ComputeHash(System.Object,System.String)">
      <summary>
            Compute a hash for the string representation of a specified value.
            </summary>
      <param name="value">Value that will be converted to a string and then hashed. Null 
            values are supported and handled as empty strings.</param>
      <param name="hashAlgorithmName">The name of the hash algorithm to be used for hashing.</param>
      <exception cref="T:System.ArgumentException">The specified <paramref name="hashAlgorithmName" /> is not supported.</exception>
    </member>
    <member name="T:Jdenticon.Identicon">
      <summary>
            Represents an identicon for a specific hash.
            </summary>
    </member>
    <member name="M:Jdenticon.Identicon.#ctor(System.Byte[],System.Int32)">
      <summary>
            Creates an <see cref="T:Jdenticon.Identicon" /> instance with the specified hash.
            </summary>
      <param name="hash">The hash that will be used as base for this icon. The hash must contain at least 6 bytes.</param>
      <param name="size">The size of the icon in pixels (the icon is quadratic).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hash" /> does not contain 6 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 1 pixel.</exception>
    </member>
    <member name="P:Jdenticon.Identicon.DefaultStyle">
      <summary>
            Gets or sets the default style that will be used for all <see cref="T:Jdenticon.Identicon" /> 
            instances where no explicit style has been specified.
            </summary>
    </member>
    <member name="M:Jdenticon.Identicon.Draw(Jdenticon.Rendering.Renderer)">
      <summary>
            Draws this icon using a specified renderer.
            </summary>
      <param name="renderer">The renderer used to render this icon.</param>
    </member>
    <member name="M:Jdenticon.Identicon.Draw(Jdenticon.Rendering.Renderer,Jdenticon.Rendering.Rectangle)">
      <summary>
            Draws this icon using a specified renderer.
            </summary>
      <param name="renderer">The renderer used to render this icon.</param>
      <param name="rect">The bounds of the rendered icon, including padding.</param>
    </member>
    <member name="M:Jdenticon.Identicon.FromHash(System.Byte[],System.Int32)">
      <summary>
            Creates an <see cref="T:Jdenticon.Identicon" /> instance from a specified hash.
            </summary>
      <param name="hash">The hash that will be used as base for this icon. The hash must contain at least 6 bytes.</param>
      <param name="size">The size of the icon in pixels (the icon is quadratic).</param>
      <returns>An <see cref="T:Jdenticon.Identicon" /> instance for the specified hash.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hash" /> does not contain 6 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 1 pixel.</exception>
    </member>
    <member name="M:Jdenticon.Identicon.FromHash(System.String,System.Int32)">
      <summary>
            Creates an <see cref="T:Jdenticon.Identicon" /> instance from a hexadecimal hash string.
            </summary>
      <param name="hash">The hex encoded hash that will be used as base for the icon. The hash string must contain at least 12 characters.</param>
      <param name="size">The size of the icon in pixels (the icon is quadratic).</param>
      <returns>An <see cref="T:Jdenticon.Identicon" /> instance for the specified hash.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hash" /> does not contain 6 bytes.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 1 pixel.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="hash" /> is not a hexadecimal string.</exception>
    </member>
    <member name="M:Jdenticon.Identicon.FromValue(System.Object,System.Int32,System.String)">
      <summary>
            Generates a hash for a specified value and creates an <see cref="T:Jdenticon.Identicon" /> instance from the generated hash.
            </summary>
      <param name="value">Value that will be converted to a string and then hashed. Null 
            values are supported and handled as empty strings.</param>
      <param name="size">The size of the icon in pixels (the icon is quadratic).</param>
      <param name="hashAlgorithmName">The name of the hash algorithm to be used for hashing.</param>
      <returns>An <see cref="T:Jdenticon.Identicon" /> instance for the hash of <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 1 pixel.</exception>
      <exception cref="T:System.ArgumentException">The specified <paramref name="hashAlgorithmName" /> is not supported.</exception>
    </member>
    <member name="P:Jdenticon.Identicon.Hash">
      <summary>
            Gets the hash that is used as base for this icon.
            </summary>
    </member>
    <member name="P:Jdenticon.Identicon.IconGenerator">
      <summary>
            Gets or sets the <see cref="T:Jdenticon.Rendering.IconGenerator" /> used to generate icons.
            </summary>
    </member>
    <member name="P:Jdenticon.Identicon.Size">
      <summary>
            Gets or sets the size of the icon.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 1 pixel.</exception>
    </member>
    <member name="P:Jdenticon.Identicon.Style">
      <summary>
            Gets or sets the style of the icon.
            </summary>
    </member>
    <member name="M:Jdenticon.Identicon.ToString">
      <summary>
            Gets a string representation of this <see cref="T:Jdenticon.Identicon" />.
            </summary>
    </member>
    <member name="T:Jdenticon.IdenticonRequest">
      <summary>
            Holds the information needed to render a requested icon, and supports serializing 
            to and from <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="M:Jdenticon.IdenticonRequest.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.IdenticonRequest</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Jdenticon.IdenticonRequest.Format">
      <summary>
            Gets or sets the file format of the requested icon.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonRequest.Hash">
      <summary>
            Gets or sets the hash that the requested icon will be based on.
            </summary>
      <exception cref="T:System.ArgumentNullException">The value was <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">The hash was shorter than 6 bytes.</exception>
    </member>
    <member name="P:Jdenticon.IdenticonRequest.Size">
      <summary>
            Gets or sets the size of the requested icon in pixels.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonRequest.Style">
      <summary>
            Gets or sets the style of the requested icon. If no style is set 
            the default style is used.
            </summary>
    </member>
    <member name="M:Jdenticon.IdenticonRequest.ToString">
      <summary>
            Serializes this request to a string that can be deserialized using <see cref="M:Jdenticon.IdenticonRequest.TryParse(System.String,Jdenticon.IdenticonRequest@)" /></summary>
    </member>
    <member name="M:Jdenticon.IdenticonRequest.TryParse(System.String,Jdenticon.IdenticonRequest@)">
      <summary>
            Tries to parse a request string serialized by <see cref="M:Jdenticon.IdenticonRequest.ToString" />.
            </summary>
      <param name="requestString">The request string.</param>
      <param name="request">The parsed request if succeeded.</param>
    </member>
    <member name="T:Jdenticon.IdenticonStyle">
      <summary>
            Specifies the color style of an identicon.
            </summary>
    </member>
    <member name="M:Jdenticon.IdenticonStyle.#ctor">
      <summary>
            Creates a new <see cref="T:Jdenticon.IdenticonStyle" /> instance initialized with the default 
            values of each property.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.BackColor">
      <summary>
            The background color of the icon. Set to <see cref="P:Jdenticon.Rendering.Color.Transparent" /> to remove the background.
            Default value is white.
            </summary>
    </member>
    <member name="M:Jdenticon.IdenticonStyle.Clone">
      <summary>
            Creates and returns a deep copy of this <see cref="T:Jdenticon.IdenticonStyle" />.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.ColorLightness">
      <summary>
            The lightness range of the colored shapes in the icon. Default value is 0.4f - 0.8f.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            One or both range bounds were less than 0.0f or greater than 1.0f.
            </exception>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.ColorSaturation">
      <summary>
            The saturation of the colored shapes in the icon. Valid values are [0.0f, 1.0f]. Default value is 0.05f.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value was less than 0.0f or greater than 1.0f.</exception>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.DefaultBackColor">
      <summary>
            Gets the default value of the <see cref="P:Jdenticon.IdenticonStyle.BackColor" /> property. Resolves to <see cref="P:Jdenticon.Rendering.Color.White" />.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.DefaultColorLightness">
      <summary>
            Gets the default value of the <see cref="P:Jdenticon.IdenticonStyle.ColorLightness" /> property. Resolves to [0.4f, 0.8f].
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.DefaultColorSaturation">
      <summary>
            Gets the default value of the <see cref="P:Jdenticon.IdenticonStyle.ColorSaturation" /> property. Resolves to 0.5f.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.DefaultGrayscaleLightness">
      <summary>
            Gets the default value of the <see cref="P:Jdenticon.IdenticonStyle.GrayscaleLightness" /> property. Resolves to [0.3f, 0.9f].
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.DefaultGrayscaleSaturation">
      <summary>
            Gets the default value of the <see cref="P:Jdenticon.IdenticonStyle.GrayscaleSaturation" /> property. Resolves to 0f.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.DefaultPadding">
      <summary>
            Gets the default value of the <see cref="P:Jdenticon.IdenticonStyle.Padding" /> property. Resolves to 0.08f.
            </summary>
    </member>
    <member name="M:Jdenticon.IdenticonStyle.Equals(Jdenticon.IdenticonStyle)">
      <summary>
            Checks if this style is identical to another style.
            </summary>
      <param name="other">The <see cref="T:Jdenticon.IdenticonStyle" /> to compare.</param>
    </member>
    <member name="M:Jdenticon.IdenticonStyle.Equals(System.Object)">
      <summary>
            Checks if this style is identical to another style.
            </summary>
      <param name="obj">The <see cref="T:Jdenticon.IdenticonStyle" /> to compare.</param>
    </member>
    <member name="M:Jdenticon.IdenticonStyle.GetHashCode">
      <summary>
            Gets a hash code for this <see cref="T:Jdenticon.IdenticonStyle" />.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.GrayscaleLightness">
      <summary>
            The lightness range of the grayscale shapes in the icon. Default value is 0.3f - 0.9f.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            One or both range bounds were less than 0.0f or greater than 1.0f.
            </exception>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.GrayscaleSaturation">
      <summary>
            The saturation of the by default grayscale shapes in the icon. The same hue is used for colored and grayscale shapes. 
            Valid values are [0.0f, 1.0f]. Default value is 0f.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value was less than 0.0f or greater than 1.0f.</exception>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.Hues">
      <summary>
            Gets or sets a collection of the allowed hues in the generated icons. If the collection is empty
            all hues are allowed.
            </summary>
    </member>
    <member name="P:Jdenticon.IdenticonStyle.Padding">
      <summary>
            Gets or sets the padding between the edge of the image and the bounds of the rendered icon.
            The value is specified in percent in the range [0.0, 0.4]. Default value is 0.08f.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value was less than 0f or greater than 0.4f.</exception>
    </member>
    <member name="T:Jdenticon.PngExtensions">
      <summary>
            Extends <see cref="T:Jdenticon.Identicon" /> with PNG specific methods.
            </summary>
    </member>
    <member name="M:Jdenticon.PngExtensions.SaveAsPng(Jdenticon.Identicon)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Portable Network Graphics (PNG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
    </member>
    <member name="M:Jdenticon.PngExtensions.SaveAsPng(Jdenticon.Identicon,System.IO.Stream)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Portable Network Graphics (PNG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="stream">The stream to which the PNG data will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.PngExtensions.SaveAsPng(Jdenticon.Identicon,System.String)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Portable Network Graphics (PNG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="path">The path to the PNG file to create. If the file already exists it will be overwritten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.PngExtensions.SaveAsPngAsync(Jdenticon.Identicon,System.IO.Stream)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Portable Network Graphics (PNG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="stream">The stream to which the PNG data will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.PngExtensions.SaveAsPngAsync(Jdenticon.Identicon,System.String)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Portable Network Graphics (PNG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="path">The path to the PNG file to create. If the file already exists it will be overwritten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> was <c>null</c>.</exception>
    </member>
    <member name="T:Jdenticon.Range">
      <summary>
            Provides helper methods for creating <see cref="T:Jdenticon.Range`1" /> values.
            </summary>
    </member>
    <member name="M:Jdenticon.Range.Create``1(``0,``0)">
      <summary>
            Creates a new <see cref="T:Jdenticon.Range`1" /> with the specified values.
            </summary>
      <param name="from">The lower bound of the range.</param>
      <param name="to">The upper bound of the range.</param>
      <typeparam name="TValue">The type of the range bounds.</typeparam>
    </member>
    <member name="T:Jdenticon.Range`1">
      <summary>
            Represents a range between two values.
            </summary>
      <typeparam name="TValue">The type of the range bounds.</typeparam>
    </member>
    <member name="M:Jdenticon.Range`1.#ctor(`0,`0)">
      <summary>
            Creates a new <see cref="T:Jdenticon.Range`1" /> instance.
            </summary>
      <param name="from">The lower bound of the range.</param>
      <param name="to">The upper bound of the range.</param>
    </member>
    <member name="M:Jdenticon.Range`1.Equals(Jdenticon.Range{`0})">
      <summary>
            Checks if this is range is equal to another range.
            </summary>
      <param name="other">The object to compare.</param>
    </member>
    <member name="M:Jdenticon.Range`1.Equals(System.Object)">
      <summary>
            Checks if this is range is equal to another range.
            </summary>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="P:Jdenticon.Range`1.From">
      <summary>
            Gets the lower bound of the range.
            </summary>
    </member>
    <member name="M:Jdenticon.Range`1.GetHashCode">
      <summary>
            Gets a hash code for this range.
            </summary>
    </member>
    <member name="M:Jdenticon.Range`1.op_Equality(Jdenticon.Range{`0},Jdenticon.Range{`0})">
      <summary>
            Checks if two ranges are equal.
            </summary>
      <param name="a">The first range to compare.</param>
      <param name="b">The second range to compare.</param>
    </member>
    <member name="M:Jdenticon.Range`1.op_Inequality(Jdenticon.Range{`0},Jdenticon.Range{`0})">
      <summary>
            Checks if two ranges are not equal.
            </summary>
      <param name="a">The first range to compare.</param>
      <param name="b">The second range to compare.</param>
    </member>
    <member name="P:Jdenticon.Range`1.To">
      <summary>
            Gets the upper bound of the range.
            </summary>
    </member>
    <member name="M:Jdenticon.Range`1.ToString">
      <summary>
            Creates a string representation of this range.
            </summary>
    </member>
    <member name="T:Jdenticon.RangeConverter">
      <summary>
            Converts <see cref="T:Jdenticon.Range`1" /> to <see cref="T:System.String" /> and vice versa.
            </summary>
    </member>
    <member name="M:Jdenticon.RangeConverter.#ctor">
      <summary>
            Creates a new instance of <see cref="T:Jdenticon.RangeConverter" />.
            </summary>
    </member>
    <member name="M:Jdenticon.RangeConverter.#ctor(System.Type)">
      <summary>
            Creates a new instance of <see cref="T:Jdenticon.RangeConverter" /> for a specific range bound value type.
            </summary>
      <param name="type">Type of range bound values.</param>
    </member>
    <member name="M:Jdenticon.RangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.RangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.RangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:Jdenticon.RangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <see langword="null" /> is passed, the current culture is assumed. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is <see langword="null" />. </exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="T:Jdenticon.SvgExtensions">
      <summary>
            Extends <see cref="T:Jdenticon.Identicon" /> with SVG specific methods.
            </summary>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.IO.Stream)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="stream">The stream to which the SVG data will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.IO.Stream,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="stream">The stream to which the SVG data will be written.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.IO.TextWriter)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which the SVG data will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.IO.TextWriter,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which the SVG data will be written.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.String)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="path">The path to the SVG file to create. If the file already exists it will be overwritten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvg(Jdenticon.Identicon,System.String,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="path">The path to the SVG file to create. If the file already exists it will be overwritten.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvgAsync(Jdenticon.Identicon,System.IO.Stream)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="stream">The stream to which the SVG data will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvgAsync(Jdenticon.Identicon,System.IO.Stream,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="stream">The stream to which the SVG data will be written.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvgAsync(Jdenticon.Identicon,System.IO.TextWriter)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which the SVG data will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvgAsync(Jdenticon.Identicon,System.IO.TextWriter,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which the SVG data will be written.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvgAsync(Jdenticon.Identicon,System.String)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="path">The path to the SVG file to create. If the file already exists it will be overwritten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.SaveAsSvgAsync(Jdenticon.Identicon,System.String,System.Boolean)">
      <summary>
            Saves an <see cref="T:Jdenticon.Identicon" /> icon as a Scalable Vector Graphics (SVG) file asynchronously.
            </summary>
      <param name="icon">The identicon to save.</param>
      <param name="path">The path to the SVG file to create. If the file already exists it will be overwritten.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.SvgExtensions.ToSvg(Jdenticon.Identicon)">
      <summary>
            Renders an <see cref="T:Jdenticon.Identicon" /> as a Scalable Vector Graphics (SVG) data string.
            </summary>
      <param name="icon">The identicon to render as SVG.</param>
    </member>
    <member name="M:Jdenticon.SvgExtensions.ToSvg(Jdenticon.Identicon,System.Boolean)">
      <summary>
            Renders an <see cref="T:Jdenticon.Identicon" /> as a Scalable Vector Graphics (SVG) data string.
            </summary>
      <param name="icon">The identicon to render as SVG.</param>
      <param name="fragment">
            If <c>true</c> the generated SVG will not be encapsulated in the root svg element making 
            it suitable to be embedded in another SVG.
            </param>
    </member>
    <member name="T:Jdenticon.Rendering.ActionDisposable">
      <summary>
            An <see cref="T:System.IDisposable" /> implementation that executes an <see cref="T:System.Action" />
            upon disposal.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.ActionDisposable.#ctor(System.Action)">
      <summary>
            Creates an instance of <see cref="T:Jdenticon.Rendering.ActionDisposable" />.
            </summary>
      <param name="action">The action that will be invoked when the <see cref="T:Jdenticon.Rendering.ActionDisposable" /> is disposed.</param>
    </member>
    <member name="M:Jdenticon.Rendering.ActionDisposable.Dispose">
      <summary>
            Calls the dispose action of this <see cref="T:Jdenticon.Rendering.ActionDisposable" />.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.ActionDisposable.Empty">
      <summary>
            Gets an <see cref="T:Jdenticon.Rendering.ActionDisposable" /> that does nothing when it is disposed.
            </summary>
    </member>
    <member name="T:Jdenticon.Rendering.Color">
      <summary>
            Represents a 24-bit color with a 8-bit alpha channel.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.A">
      <summary>
            Gets the alpha channel value of this color in the range [0,255] where 0 is fully transparent.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.AliceBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F0F8FFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.AntiqueWhite">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FAEBD7FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Aqua">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00FFFFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Aquamarine">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #7FFFD4FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Azure">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F0FFFFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.B">
      <summary>
            Gets the blue component of this color in the range [0,255].
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Beige">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F5F5DCFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Bisque">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFE4C4FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Black">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #000000FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.BlanchedAlmond">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFEBCDFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Blue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #0000FFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.BlueViolet">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #8A2BE2FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Brown">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #A52A2AFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Burlywood">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DEB887FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.CadetBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #5F9EA0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Chartreuse">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #7FFF00FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Chocolate">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #D2691EFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Coral">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF7F50FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.CornflowerBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #6495EDFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Cornsilk">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFF8DCFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Crimson">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DC143CFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Cyan">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00FFFFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00008BFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkCyan">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #008B8BFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkGoldenrod">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #B8860BFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #A9A9A9FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #006400FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #A9A9A9FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkKhaki">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #BDB76BFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkMagenta">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #8B008BFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkOliveGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #556B2FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkOrange">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF8C00FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkOrchid">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #9932CCFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkRed">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #8B0000FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkSalmon">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #E9967AFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkSeaGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #8FBC8FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkSlateBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #483D8BFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkSlateGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #2F4F4FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkSlateGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #2F4F4FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkTurquoise">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00CED1FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DarkViolet">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #9400D3FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DeepPink">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF1493FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DeepSkyBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00BFFFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DimGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #696969FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DimGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #696969FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.DodgerBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #1E90FFFF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.Equals(Jdenticon.Rendering.Color)">
      <summary>
            Checks if this color has the same RGBA value as another color.
            </summary>
      <param name="other">The color to compare.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Color.Equals(System.Object)">
      <summary>
            Checks if this color has the same RGBA value as another color.
            </summary>
      <param name="obj">The color to compare.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Firebrick">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #B22222FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.FloralWhite">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFAF0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.ForestGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #228B22FF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromHsl(System.Single,System.Single,System.Single)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.Color" /> instance from HSL (Hue-Saturation-Lightness) color parameters.
            </summary>
      <param name="hue">Hue in the range [0, 1]</param>
      <param name="saturation">Saturation in the range [0, 1]</param>
      <param name="lightness">Lightness in the range [0, 1]</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One of the components was <see cref="F:System.Single.NaN" />, less than 0f or greater than 1f.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromHsl(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.Color" /> instance from HSL (Hue-Saturation-Lightness) color parameters and an alpha value.
            </summary>
      <param name="hue">Hue in the range [0, 1]</param>
      <param name="saturation">Saturation in the range [0, 1]</param>
      <param name="lightness">Lightness in the range [0, 1]</param>
      <param name="alpha">Alpha in the range [0, 1]</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One of the components was <see cref="F:System.Single.NaN" />, less than 0f or greater than 1f.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromHwb(System.Single,System.Single,System.Single)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.Color" /> instance from HWB (Hue-Whiteness-Blackness) color parameters.
            </summary>
      <param name="hue">Hue in the range [0, 1].</param>
      <param name="whiteness">Whiteness in the range [0, 1].</param>
      <param name="blackness">Blackness in the range [0, 1].</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One of the components was <see cref="F:System.Single.NaN" />, less than 0f or greater than 1f.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromHwb(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.Color" /> instance from HWB (Hue-Whiteness-Blackness) color parameters and an alpha value.
            </summary>
      <param name="hue">Hue in the range [0, 1].</param>
      <param name="whiteness">Whiteness in the range [0, 1].</param>
      <param name="blackness">Blackness in the range [0, 1].</param>
      <param name="alpha">Alpha in the range [0, 1].</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One of the components was <see cref="F:System.Single.NaN" />, less than 0f or greater than 1f.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromRgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a fully opaque <see cref="T:Jdenticon.Rendering.Color" /> from RGB color components.
            </summary>
      <param name="red">Red component in the range [0,255].</param>
      <param name="green">Green component in the range [0,255].</param>
      <param name="blue">Blue component in the range [0,255].</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One of the components was less than 0 or greater than 255.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromRgba(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.Color" /> from RGBA color components.
            </summary>
      <param name="red">Red component in the range [0,255].</param>
      <param name="green">Green component in the range [0,255].</param>
      <param name="blue">Blue component in the range [0,255].</param>
      <param name="alpha">Alpha channel value in the range [0,255].</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One of the components was less than 0 or greater than 255.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Color.FromRgba(System.UInt32)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.Color" /> from a 32-bit RGBA value.
            </summary>
      <param name="rgba">A 0xRRGGBBAA color value.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Fuchsia">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF00FFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.G">
      <summary>
            Gets the green component of this color in the range [0,255].
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Gainsboro">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DCDCDCFF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.GetHashCode">
      <summary>
            Gets the RGBA value which serves as hash for this color.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.GhostWhite">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F8F8FFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Gold">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFD700FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Goldenrod">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DAA520FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Gray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #BEBEBEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Green">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00FF00FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.GreenYellow">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #ADFF2FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Grey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #BEBEBEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Honeydew">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F0FFF0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.HotPink">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF69B4FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.IndianRed">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #CD5C5CFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Indigo">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #4B0082FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Ivory">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFFF0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Khaki">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F0E68CFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Lavender">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #E6E6FAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LavenderBlush">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFF0F5FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LawnGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #7CFC00FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LemonChiffon">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFACDFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #ADD8E6FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightCoral">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F08080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightCyan">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #E0FFFFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightGoldenrod">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #EEDD82FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightGoldenrodYellow">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FAFAD2FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #D3D3D3FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #90EE90FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #D3D3D3FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightPink">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFB6C1FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSalmon">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFA07AFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSeaGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #20B2AAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSkyBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #87CEFAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSlateBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #8470FFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSlateGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #778899FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSlateGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #778899FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightSteelBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #B0C4DEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LightYellow">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFFE0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Lime">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00FF00FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.LimeGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #32CD32FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Linen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FAF0E6FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Magenta">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF00FFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Maroon">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #B03060FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumAquamarine">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #66CDAAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #0000CDFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumOrchid">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #BA55D3FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumPurple">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #9370DBFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumSeaGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #3CB371FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumSlateBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #7B68EEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumSpringGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00FA9AFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumTurquoise">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #48D1CCFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MediumVioletRed">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #C71585FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MidnightBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #191970FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MintCream">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F5FFFAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.MistyRose">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFE4E1FF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.Mix(Jdenticon.Rendering.Color,Jdenticon.Rendering.Color,System.Single)">
      <summary>
            Computes a mix of the two specified colors, with the proportion given by the specified weight.
            </summary>
      <param name="color1">First color to mix.</param>
      <param name="color2">Second color to mix.</param>
      <param name="weight">Weight in the range [0,1]. 0 gives <paramref name="color1" />, 1 gives <paramref name="color2" />.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Moccasin">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFE4B5FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.NavajoWhite">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFDEADFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Navy">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #000080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.NavyBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #000080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.OldLace">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FDF5E6FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Olive">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #808000FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.OliveDrab">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #6B8E23FF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.op_Equality(Jdenticon.Rendering.Color,Jdenticon.Rendering.Color)">
      <summary>
            Checks if the two <see cref="T:Jdenticon.Rendering.Color" /> have the same RGBA value.
            </summary>
      <param name="a">The first color to compare.</param>
      <param name="b">The second color to compare.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Color.op_Inequality(Jdenticon.Rendering.Color,Jdenticon.Rendering.Color)">
      <summary>
            Checks if the two <see cref="T:Jdenticon.Rendering.Color" /> have different RGBA value.
            </summary>
      <param name="a">The first color to compare.</param>
      <param name="b">The second color to compare.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Orange">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFA500FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.OrangeRed">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF4500FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Orchid">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DA70D6FF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.Over(Jdenticon.Rendering.Color)">
      <summary>
            Blends this color with another color using the over blending operation.
            </summary>
      <param name="background">The background color.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PaleGoldenrod">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #EEE8AAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PaleGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #98FB98FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PaleTurquoise">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #AFEEEEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PaleVioletRed">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DB7093FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PapayaWhip">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFEFD5FF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.Parse(System.String)">
      <summary>
            Parse a string to a <see cref="T:Jdenticon.Rendering.Color" />.
            </summary>
      <param name="input">The string to be parsed as a <see cref="T:Jdenticon.Rendering.Color" />.</param>
      <param name="result">The parsed color.</param>
      <returns>The parsed <see cref="T:Jdenticon.Rendering.Color" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> could not be parsed as a color.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <c>null</c>.</exception>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PeachPuff">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFDAB9FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Peru">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #CD853FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Pink">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFC0CBFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Plum">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #DDA0DDFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.PowderBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #B0E0E6FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Purple">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #A020F0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.R">
      <summary>
            Gets the red component of this color in the range [0,255].
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.RebeccaPurple">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #663399FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Red">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF0000FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.RosyBrown">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #BC8F8FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.RoyalBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #4169E1FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SaddleBrown">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #8B4513FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Salmon">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FA8072FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SandyBrown">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F4A460FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SeaGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #2E8B57FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Seashell">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFF5EEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Sienna">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #A0522DFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Silver">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #C0C0C0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SkyBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #87CEEBFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SlateBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #6A5ACDFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SlateGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #708090FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SlateGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #708090FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Snow">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFAFAFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SpringGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00FF7FFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.SteelBlue">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #4682B4FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Tan">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #D2B48CFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Teal">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #008080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Thistle">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #D8BFD8FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Tomato">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FF6347FF.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.ToRgba">
      <summary>
            Gets the 32-bit RGBA value of this color.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.ToString">
      <summary>
            Gets a hexadecimal representation of this color on the format #rrggbbaa.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.ToString(System.String)">
      <summary>
            Gets a string representation of this color on the specified format.
            </summary>
      <param name="format">Color string format.</param>
      <param name="formatProvider">Format provider used to convert integers to strings.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Color.ToString(System.String,System.IFormatProvider)">
      <summary>
            Gets a string representation of this color on the specified format.
            </summary>
      <param name="format">Color string format.</param>
      <param name="formatProvider">Format provider used to convert integers to strings.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Transparent">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #00000000.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Color.TryParse(System.String,Jdenticon.Rendering.Color@)">
      <summary>
            Tries to parse a string to a <see cref="T:Jdenticon.Rendering.Color" /> without throwing any exception upon failures.
            </summary>
      <param name="input">The string to be parsed as a <see cref="T:Jdenticon.Rendering.Color" />.</param>
      <param name="result">The parsed color.</param>
      <returns>
        <c>true</c> if <paramref name="input" /> could be parsed as a color, otherwise <c>false</c>.</returns>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Turquoise">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #40E0D0FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Violet">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #EE82EEFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.VioletRed">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #D02090FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.WebGray">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #808080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.WebGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #008000FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.WebGrey">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #808080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.WebMaroon">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #800000FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.WebPurple">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #800080FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Wheat">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F5DEB3FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.White">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFFFFFF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.WhiteSmoke">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #F5F5F5FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.Yellow">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #FFFF00FF.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Color.YellowGreen">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.Color" /> with a #RRGGBBAA value of #9ACD32FF.
            </summary>
    </member>
    <member name="T:Jdenticon.Rendering.ColorConverter">
      <summary>
            Converts <see cref="T:Jdenticon.Rendering.Color" /> to <see cref="T:System.String" />, and vice versa.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.ColorConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Rendering.ColorConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Jdenticon.Rendering.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:Jdenticon.Rendering.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <see langword="null" /> is passed, the current culture is assumed. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is <see langword="null" />. </exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="T:Jdenticon.Rendering.ColorTheme">
      <summary>
            Specifies the colors to be used in an identicon.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.ColorTheme.#ctor(System.Single,Jdenticon.IdenticonStyle)">
      <summary>
            Creates an instance of <see cref="T:Jdenticon.Rendering.ColorTheme" />.
            </summary>
      <param name="hue">The hue of the colored shapes.</param>
      <param name="style">The style that specifies the lightness and saturation of the icon.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="style" /> is <c>null</c>.</exception>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.Count">
      <summary>
            Gets the number of colors in this theme.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.DarkColor">
      <summary>
            Gets or sets the low-lightness color of the icon.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.DarkGray">
      <summary>
            Gets or sets the dark gray color of the icon.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.Item(System.Int32)">
      <summary>
            Gets a color from this color theme by index.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">There is no color of the specified index.</exception>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.LightColor">
      <summary>
            Gets or sets the high-lightness color of the icon.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.LightGray">
      <summary>
            Gets or sets the light gray color of the icon.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.ColorTheme.MidColor">
      <summary>
            Gets or sets the mid-lightness color of the icon.
            </summary>
    </member>
    <member name="T:Jdenticon.Rendering.HueCollection">
      <summary>
            A collection of hue values.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.#ctor">
      <summary>
            Creates an empty <see cref="T:Jdenticon.Rendering.HueCollection" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.#ctor(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>
            Creates a new <see cref="T:Jdenticon.Rendering.HueCollection" /> containing the specified hue
            values specified in turns.
            </summary>
      <param name="hues">Enumerable of hues to be added to the new collection. 
            Hues should be specified in turns and will be normalized to the range [0, 1).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hues" /> was <c>Nothing</c>.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.#ctor(System.Single[])">
      <summary>
            Creates a new <see cref="T:Jdenticon.Rendering.HueCollection" /> containing the specified hue
            values specified in turns.
            </summary>
      <param name="hues">Enumerable of hues to be added to the new collection. 
            Hues should be specified in turns and will be normalized to the range [0, 1).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hues" /> was <c>Nothing</c>.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Add(System.Single)">
      <summary>
            Adds a hue to the collection.
            </summary>
      <param name="hue">Hue specified in turns. The hue will be normalized to the range [0, 1) turns.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hue" /> was NaN or infinite.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Add(System.Single,Jdenticon.Rendering.HueUnit)">
      <summary>
            Adds a hue to the collection.
            </summary>
      <param name="hue">Hue in a specified unit. The hue will be converted and normalized to turns in the range [0, 1).</param>
      <param name="hueUnit">The unit of <paramref name="hue" />.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Clear">
      <summary>
            Empties this collection.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Contains(System.Single)">
      <summary>
            Checks whether a specified hue exists in this collection.
            </summary>
      <param name="hue">Hue in turns to find in the collection.</param>
      <returns>
        <c>true</c> if found, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Contains(System.Single,Jdenticon.Rendering.HueUnit)">
      <summary>
            Checks whether a specified hue exists in this collection.
            </summary>
      <param name="hue">Hue to find in the collection.</param>
      <param name="hueUnit">Unit of <paramref name="hueUnit" />.</param>
      <returns>
        <c>true</c> if found, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.CopyTo(System.Single[],System.Int32)">
      <summary>
            Copies the hues in this collection to the specified array.
            </summary>
      <param name="array">Array to copy the hues to.</param>
      <param name="arrayIndex">The index in <paramref name="array" /> to which the first hue will be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <c>null</c></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> was negative</exception>
      <exception cref="T:System.ArgumentException">Insufficient space in the specified array.</exception>
    </member>
    <member name="P:Jdenticon.Rendering.HueCollection.Count">
      <summary>
            Gets the number of hues in this collection.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Equals(Jdenticon.Rendering.HueCollection)">
      <summary>
            Checks whether this <see cref="T:Jdenticon.Rendering.HueCollection" /> contains the same
            hues and the same order as <paramref name="other" />. 
            </summary>
      <param name="other">Collection to compare with.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Equals(System.Object)">
      <summary>
            Checks if this style is identical to another object.
            </summary>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.GetEnumerator">
      <summary>
            Gets an enumerator for enumerating over the hues (in turns, range [0, 1)) in this collection.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.GetHashCode">
      <summary>
            Gets a hash code for this <see cref="T:Jdenticon.Rendering.HueCollection" />.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.HueCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether this is a read-only collection.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.HueCollection.Item(System.Int32)">
      <summary>
            Gets the hue (in turns, range [0, 1)) at the specified index in this collection.
            </summary>
      <param name="index">Hue index.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Remove(System.Single)">
      <summary>
            Removes the specified hue from this collection.
            </summary>
      <param name="hue">Hue in turns. Will be normalized to turns in the range [0, 1).</param>
      <returns>
        <c>true</c> if the hue was found and removed from the collection.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.Remove(System.Single,Jdenticon.Rendering.HueUnit)">
      <summary>
            Removes the specified hue from this collection.
            </summary>
      <param name="hue">Hue. Will be normalized to turns in the range [0, 1).</param>
      <param name="hueUnit">The unit of <paramref name="hue" />.</param>
      <returns>
        <c>true</c> if the hue was found and removed from the collection.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.ToString">
      <summary>
            Creates a string representation of the hues in this collection.
            The result can be parsed using <see cref="M:Jdenticon.Rendering.HueString.Parse(System.String)" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueCollection.ToString(System.IFormatProvider)">
      <summary>
            Creates a culture-specific string representation of the hues in this collection.
            The result can be parsed using <see cref="M:Jdenticon.Rendering.HueString.Parse(System.String,System.IFormatProvider)" />.
            </summary>
      <param name="formatProvider">Format provider used for formatting numbers in the hue string.</param>
    </member>
    <member name="T:Jdenticon.Rendering.HueString">
      <summary>
            Specifies a list of hue values as a string.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.#ctor(Jdenticon.Rendering.HueCollection)">
      <summary>
            Creates a <see cref="T:Jdenticon.Rendering.HueString" /> instance containing the hue values from a specified <see cref="T:Jdenticon.Rendering.HueCollection" />.
            </summary>
      <param name="collection">Hue values from this collection is added to the hue string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.#ctor(System.String)">
      <summary>
            Parses a list of hues specified as a string.
            </summary>
      <param name="value">Hue string to parse.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.#ctor(System.String,System.IFormatProvider)">
      <summary>
            Parses a culture-specific list of hues specified as a string.
            </summary>
      <param name="value">Hue string to parse.</param>
      <param name="formatProvider">Format provider for parsing numbers.</param>
    </member>
    <member name="P:Jdenticon.Rendering.HueString.Empty">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.HueString" /> with no hue values.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.Equals(Jdenticon.Rendering.HueString)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>
        <see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.op_Equality(Jdenticon.Rendering.HueString,Jdenticon.Rendering.HueString)">
      <summary>
            Checks if the two <see cref="T:Jdenticon.Rendering.HueString" /> have the same hue values.
            </summary>
      <param name="a">The first cohue stringlor to compare.</param>
      <param name="b">The second hue string to compare.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.op_Inequality(Jdenticon.Rendering.HueString,Jdenticon.Rendering.HueString)">
      <summary>
            Checks if the two <see cref="T:Jdenticon.Rendering.HueString" /> have different hue values.
            </summary>
      <param name="a">The first hue string to compare.</param>
      <param name="b">The second hue string to compare.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.Parse(System.String)">
      <summary>
            Parses a list of hues specified as a string.
            </summary>
      <param name="value">Hue string to parse.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.Parse(System.String,System.IFormatProvider)">
      <summary>
            Parses a culture-specific list of hues specified as a string.
            </summary>
      <param name="value">Hue string to parse.</param>
      <param name="formatProvider">Format provider for parsing numbers.</param>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.ToCollection">
      <summary>
            Gets a <see cref="T:Jdenticon.Rendering.HueCollection" /> containing the hues in this <see cref="T:Jdenticon.Rendering.HueString" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.ToString">
      <summary>
            Creates a string representation of these hues.
            The result can be parsed using <see cref="M:Jdenticon.Rendering.HueString.#ctor(System.String)" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueString.ToString(System.IFormatProvider)">
      <summary>
            Creates a culture-specific string representation of these hues.
            The result can be parsed using <see cref="M:Jdenticon.Rendering.HueString.#ctor(System.String,System.IFormatProvider)" />.
            </summary>
      <param name="formatProvider">Format provider used for formatting numbers in the hue string.</param>
    </member>
    <member name="T:Jdenticon.Rendering.HueStringConverter">
      <summary>
            Converts <see cref="T:Jdenticon.Rendering.HueString" /> to <see cref="T:System.String" />, and vice versa.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueStringConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Rendering.HueStringConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Jdenticon.Rendering.HueStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Jdenticon.Rendering.HueStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:Jdenticon.Rendering.HueStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If <see langword="null" /> is passed, the current culture is assumed. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is <see langword="null" />. </exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="T:Jdenticon.Rendering.HueUnit">
      <summary>
            Specifies the unit of a hue value.
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.HueUnit.Degrees">
      <summary>
            Hue specified in degrees. The first turn is specified in the range [0, 360).
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.HueUnit.Turns">
      <summary>
            Hue specified in turns. The first turn is specified in the range [0, 1).
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.HueUnit.Radians">
      <summary>
            Hue specified in radians. The first turn is specified in the range [0, 2π).
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.HueUnit.Gradians">
      <summary>
            Hue specified in gradians. The first turn is specified in the range [0, 400).
            </summary>
    </member>
    <member name="T:Jdenticon.Rendering.IconGenerator">
      <summary>
            Generates identicons and render them to a <see cref="T:Jdenticon.Rendering.Renderer" />. This class
            dictates what shapes will be used in the generated icons. If you intend to 
            customize the appearance of generated icons you probably wants to either subclass
            or modify this class.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Rendering.IconGenerator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Jdenticon.Rendering.IconGenerator.CellCount">
      <summary>
            Gets the number of cells in each direction of the icons generated by this <see cref="T:Jdenticon.Rendering.IconGenerator" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.Generate(Jdenticon.Rendering.Renderer,Jdenticon.Rendering.Rectangle,Jdenticon.IdenticonStyle,System.Byte[])">
      <summary>
            Generates an identicon for the specified hash.
            </summary>
      <param name="renderer">The <see cref="T:Jdenticon.Rendering.Renderer" /> to be used for rendering the icon on the target surface.</param>
      <param name="rect">The outer bounds of the icon.</param>
      <param name="style">The style of the icon.</param>
      <param name="hash">The hash to be used as basis for the generated icon.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="renderer" />, <paramref name="style" /> or <paramref name="hash" /> 
                was <c>null</c>.
            </exception>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.GetCategories">
      <summary>
            Gets an enumeration of the shape categories to be rendered in icons generated by
            this <see cref="T:Jdenticon.Rendering.IconGenerator" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.GetHue(System.Byte[])">
      <summary>
            Determines the hue to be used in an icon for the specified hash.
            </summary>
      <param name="hash">Hash for which the hue will be computed. Must contain at least 4 bytes.</param>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.GetInnerRectangle(Jdenticon.Rendering.Rectangle,System.Single)">
      <summary>
            Creates a quadratic copy of the specified <see cref="T:Jdenticon.Rendering.Rectangle" /> with a 
            multiple of the cell count as size.
            </summary>
      <param name="rect">The outer icon rectangle.</param>
      <param name="padding">Padding of the icon.</param>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.GetOctet(System.Byte[],System.Int32)">
      <summary>
            Gets the specified octet from a byte array.
            </summary>
      <param name="source">The array from which the octet will be retrieved.</param>
      <param name="index">The zero-based index of the octet to be returned.</param>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.GetShapes(Jdenticon.Rendering.ColorTheme,System.Byte[])">
      <summary>
            Gets an enumeration of individual shapes to be rendered in an icon for a specific hash.
            </summary>
      <param name="colorTheme">A color theme specifying the colors to be used in the icon.</param>
      <param name="hash">The hash for which the shapes will be returned.</param>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.RenderBackground(Jdenticon.Rendering.Renderer,Jdenticon.Rendering.Rectangle,Jdenticon.IdenticonStyle,Jdenticon.Rendering.ColorTheme,System.Byte[])">
      <summary>
            Renders the background of an icon.
            </summary>
      <param name="renderer">The <see cref="T:Jdenticon.Rendering.Renderer" /> to be used for rendering the icon on the target surface.</param>
      <param name="rect">The outer bounds of the icon.</param>
      <param name="style">The style of the icon.</param>
      <param name="colorTheme">A color theme specifying the colors to be used in the icon.</param>
      <param name="hash">The hash to be used as basis for the generated icon.</param>
    </member>
    <member name="M:Jdenticon.Rendering.IconGenerator.RenderForeground(Jdenticon.Rendering.Renderer,Jdenticon.Rendering.Rectangle,Jdenticon.IdenticonStyle,Jdenticon.Rendering.ColorTheme,System.Byte[])">
      <summary>
            Renders the foreground of an icon.
            </summary>
      <param name="renderer">The <see cref="T:Jdenticon.Rendering.Renderer" /> to be used for rendering the icon on the target surface.</param>
      <param name="rect">The outer bounds of the icon.</param>
      <param name="style">The style of the icon.</param>
      <param name="colorTheme">A color theme specifying the colors to be used in the icon.</param>
      <param name="hash">The hash to be used as basis for the generated icon.</param>
    </member>
    <member name="T:Jdenticon.Rendering.PngRenderer">
      <summary>
            Renders icons as PNG using the internal vector rasterizer.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.PngRenderer.#ctor(System.Int32,System.Int32)">
      <summary>
            Creates an instance of the class <see cref="T:Jdenticon.Rendering.PngRenderer" />.
            </summary>
      <param name="width">The width of the icon in pixels.</param>
      <param name="height">The height of the icon in pixels.</param>
    </member>
    <member name="M:Jdenticon.Rendering.PngRenderer.AddCircleNoTransform(Jdenticon.Rendering.PointF,System.Single,System.Boolean)">
      <summary>
            Adds a circle without translating of its border.
            </summary>
      <param name="location">The upper-left position of the bounding rectangle.</param>
      <param name="diameter">The diameter of the circle.</param>
      <param name="counterClockwise">If <c>true</c> the cirlce will be drawn counter clockwise.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if this method is called without first calling <see cref="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)" />.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.PngRenderer.AddPolygonNoTransform(Jdenticon.Rendering.PointF[])">
      <summary>
            Adds a polygon without translating or changing direction of the points.
            </summary>
      <param name="points">The points that the polygon consists of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="points" /> is <c>null</c>.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if this method is called without first calling <see cref="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)" />.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.PngRenderer.BeginShape(Jdenticon.Rendering.Color)">
      <summary>
            Begins a new shape. The shape should always be ended by disposing the 
            returned <see cref="T:System.IDisposable" />.
            </summary>
      <param name="color">The fill color of the shape.</param>
    </member>
    <member name="M:Jdenticon.Rendering.PngRenderer.SavePng(System.IO.Stream)">
      <summary>
            Saves the rendered icon as a PNG stream.
            </summary>
      <param name="stream">Stream to write PNG data to.</param>
    </member>
    <member name="M:Jdenticon.Rendering.PngRenderer.SetBackground(Jdenticon.Rendering.Color,Jdenticon.Rendering.Rectangle)">
      <summary>
            Sets the background color of the image.
            </summary>
      <param name="color">New background color.</param>
      <param name="iconBounds">The icon bounds.</param>
    </member>
    <member name="T:Jdenticon.Rendering.PointF">
      <summary>
            A 2D coordinate.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.PointF.#ctor(System.Single,System.Single)">
      <summary>
            Creates an instance of <see cref="T:Jdenticon.Rendering.PointF" />.
            </summary>
      <param name="x">X coordinate.</param>
      <param name="y">Y coordinate.</param>
    </member>
    <member name="M:Jdenticon.Rendering.PointF.ToString">
      <summary>
            Gets a string representation of this point.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.PointF.X">
      <summary>
            Gets the X coordinate of this point.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.PointF.Y">
      <summary>
            Gets the Y coordinate of this point.
            </summary>
    </member>
    <member name="T:Jdenticon.Rendering.Rectangle">
      <summary>
            The coordinates of a rectangle.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates an instance of <see cref="T:Jdenticon.Rendering.Rectangle" />.
            </summary>
      <param name="x">The X coordinate of the left edge of the rectangle.</param>
      <param name="y">The Y coordinate of the top edge of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
    </member>
    <member name="P:Jdenticon.Rendering.Rectangle.Height">
      <summary>
            Gets the height of the rectangle.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Rectangle.Width">
      <summary>
            Gets the width of the rectangle.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Rectangle.X">
      <summary>
            Gets the X coordinate of the left edge of the rectangle.
            </summary>
    </member>
    <member name="P:Jdenticon.Rendering.Rectangle.Y">
      <summary>
            Gets the Y coordinate of the top edge of the rectangle.
            </summary>
    </member>
    <member name="T:Jdenticon.Rendering.Renderer">
      <summary>
            Base class for rendering shapes in an identicon.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Rendering.Renderer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddCircle(System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Adds a circle to the image.
            </summary>
      <param name="x">X coordinate of the bounding rectangle.</param>
      <param name="y">Y coordinate of the bounding rectangle.</param>
      <param name="size">Width and height of the bounding rectangle.</param>
      <param name="invert">If <c>true</c> the area of the circle will be removed from the filled area.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddCircleNoTransform(Jdenticon.Rendering.PointF,System.Single,System.Boolean)">
      <summary>
            Adds a circle without translating of its border.
            </summary>
      <param name="location">The upper-left position of the bounding rectangle.</param>
      <param name="diameter">The diameter of the circle.</param>
      <param name="counterClockwise">If <c>true</c> the cirlce will be drawn counter clockwise.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if this method is called without first calling <see cref="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)" />.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddPolygon(Jdenticon.Rendering.PointF[],System.Boolean)">
      <summary>
            Adds a polygon to the image.
            </summary>
      <param name="points">List of points that the polygon consists of.</param>
      <param name="invert">If <c>true</c> the area of the polygon will be removed from the filled area.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="points" /> was <c>null</c>.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddPolygonNoTransform(Jdenticon.Rendering.PointF[])">
      <summary>
            Adds a polygon without translating or changing direction of the points.
            </summary>
      <param name="points">The points that the polygon consists of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="points" /> is <c>null</c>.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if this method is called without first calling <see cref="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)" />.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddRectangle(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Adds a rectangle to the image.
            </summary>
      <param name="x">X coordinate of the rectangle.</param>
      <param name="y">Y coordinate of the rectangle.</param>
      <param name="width">Width of the rectangle.</param>
      <param name="height">Height of the rectangle.</param>
      <param name="invert">If <c>true</c> the area of the rectangle will be removed from the filled area.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddRhombus(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Adds a rhombus to the image.
            </summary>
      <param name="x">X coordinate of the bounding rectangle.</param>
      <param name="y">Y coordinate of the bounding rectangle.</param>
      <param name="width">Width of the bounding rectangle.</param>
      <param name="height">Height of the bounding rectangle.</param>
      <param name="invert">If <c>true</c> the area of the rhombus will be removed from the filled area.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.AddTriangle(System.Single,System.Single,System.Single,System.Single,Jdenticon.Rendering.TriangleDirection,System.Boolean)">
      <summary>
            Adds a triangle to the image.
            </summary>
      <param name="x">X coordinate of the bounding rectangle.</param>
      <param name="y">Y coordinate of the bounding rectangle.</param>
      <param name="width">Width of the bounding rectangle.</param>
      <param name="height">Height of the bounding rectangle.</param>
      <param name="direction">The direction of the triangle.</param>
      <param name="invert">If <c>true</c> the area of the triangle will be removed from the filled area.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)">
      <summary>
            Begins a new shape. The shape should always be ended by disposing the 
            returned <see cref="T:System.IDisposable" />.
            </summary>
      <param name="color">The fill color of the shape.</param>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.Flush">
      <summary>
            Flushes all pending draw operations to the target.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.Renderer.SetBackground(Jdenticon.Rendering.Color,Jdenticon.Rendering.Rectangle)">
      <summary>
            Sets the background color of the image.
            </summary>
      <param name="color">New background color.</param>
      <param name="iconBounds">The icon bounds.</param>
    </member>
    <member name="T:Jdenticon.Rendering.SvgRenderer">
      <summary>
            Renders icons as SVG paths.
            </summary>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.#ctor(System.Int32,System.Int32)">
      <summary>
            Creates an instance of <see cref="T:Jdenticon.Rendering.SvgRenderer" />.
            </summary>
      <param name="width">The width of the icon in pixels.</param>
      <param name="height">The height of the icon in pixels.</param>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.AddCircleNoTransform(Jdenticon.Rendering.PointF,System.Single,System.Boolean)">
      <summary>
            Adds a circle without translating of its border.
            </summary>
      <param name="location">The upper-left position of the bounding rectangle.</param>
      <param name="diameter">The diameter of the circle.</param>
      <param name="counterClockwise">If <c>true</c> the cirlce will be drawn counter clockwise.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if this method is called without first calling <see cref="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)" />.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.AddPolygonNoTransform(Jdenticon.Rendering.PointF[])">
      <summary>
            Adds a polygon without translating or changing direction of the points.
            </summary>
      <param name="points">The points that the polygon consists of.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="points" /> is <c>null</c>.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if this method is called without first calling <see cref="M:Jdenticon.Rendering.Renderer.BeginShape(Jdenticon.Rendering.Color)" />.</exception>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.BeginShape(Jdenticon.Rendering.Color)">
      <summary>
            Begins a new shape. The shape should always be ended by disposing the 
            returned <see cref="T:System.IDisposable" />.
            </summary>
      <param name="color">The fill color of the shape.</param>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.Save(System.IO.TextWriter,System.Boolean)">
      <summary>
            Writes the SVG to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">The output writer to which the SVG will be written.</param>
      <param name="fragment">If <c>true</c> an SVG string without the root svg element will be rendered.</param>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.SetBackground(Jdenticon.Rendering.Color,Jdenticon.Rendering.Rectangle)">
      <summary>
            Sets the background color of the image.
            </summary>
      <param name="color">New background color.</param>
      <param name="iconBounds">The icon bounds.</param>
    </member>
    <member name="M:Jdenticon.Rendering.SvgRenderer.ToSvg(System.Boolean)">
      <summary>
            Writes the SVG to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="fragment">If <c>true</c> an SVG string without the root svg element will be rendered.</param>
    </member>
    <member name="T:Jdenticon.Rendering.TriangleDirection">
      <summary>
            Specifies in what direction the 90 degree angle of a triangle is pointing.
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.TriangleDirection.SouthWest">
      <summary>
            The 90 degree angle is pointing to South West.
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.TriangleDirection.NorthWest">
      <summary>
            The 90 degree angle is pointing to North West.
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.TriangleDirection.NorthEast">
      <summary>
            The 90 degree angle is pointing to North East.
            </summary>
    </member>
    <member name="F:Jdenticon.Rendering.TriangleDirection.SouthEast">
      <summary>
            The 90 degree angle is pointing to South East.
            </summary>
    </member>
    <member name="T:Jdenticon.Shapes.Shape">
      <summary>
            Represents a shape to be rendered in an icon. These instances are hash specific.
            </summary>
    </member>
    <member name="M:Jdenticon.Shapes.Shape.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Shapes.Shape</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Jdenticon.Shapes.Shape.Color">
      <summary>
            The fill color of the shape.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.Shape.Definition">
      <summary>
            The shape definition to be used to render the shape.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.Shape.Positions">
      <summary>
            The positions in which the shape will be rendered.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.Shape.StartRotationIndex">
      <summary>
            The rotation index of the icon in the first position.
            </summary>
    </member>
    <member name="T:Jdenticon.Shapes.ShapeCategory">
      <summary>
            Represents a category of shapes that can be rendered in an icon. These instances are
            not hash specific.
            </summary>
    </member>
    <member name="M:Jdenticon.Shapes.ShapeCategory.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Shapes.ShapeCategory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeCategory.ColorIndex">
      <summary>
            The index of the hash octet determining the color of shapes in this category.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeCategory.Positions">
      <summary>
            The positions in which the shapes of this category will be rendered.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeCategory.RotationIndex">
      <summary>
            The index of the hash octet determining the rotation index of the shape in the first position.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeCategory.ShapeIndex">
      <summary>
            The index of the hash octet determining which of the shape definitions that will be used 
            for a particular hash.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeCategory.Shapes">
      <summary>
            A list of possible shape definitions in this category.
            </summary>
    </member>
    <member name="T:Jdenticon.Shapes.ShapeDefinition">
      <summary>
            Renders a shape in the specified drawing context.
            </summary>
      <param name="renderer">Renderer used to render the shape.</param>
      <param name="cell">The bounds of the cell in which the shape is rendered.</param>
      <param name="index">The zero based index of the current shape position.</param>
    </member>
    <member name="T:Jdenticon.Shapes.ShapeDefinitions">
      <summary>
            Provides definitions for the default shapes used in identicons.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeDefinitions.CenterShapes">
      <summary>
            Gets the definition of the shapes that are placed in the center of the icon.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapeDefinitions.OuterShapes">
      <summary>
            Gets the definition of the shapes that are placed around the center of the icon.
            </summary>
    </member>
    <member name="T:Jdenticon.Shapes.ShapePosition">
      <summary>
            Specifies in which cell a shape will be rendered.
            </summary>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.#ctor(System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance.
            </summary>
      <param name="x">The x-coordinate of the containing cell.</param>
      <param name="y">The y-coordinate of the containing cell.</param>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.Equals(Jdenticon.Shapes.ShapePosition)">
      <summary>
            Checks if this position is equal to another position.
            </summary>
      <param name="other">The object to compare with.</param>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.Equals(System.Object)">
      <summary>
            Checks if this position is equal to another position.
            </summary>
      <param name="obj">The object to compare with.</param>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.GetHashCode">
      <summary>
            Gets a hash code for this <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance.
            </summary>
      <returns></returns>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.op_Equality(Jdenticon.Shapes.ShapePosition,Jdenticon.Shapes.ShapePosition)">
      <summary>
            Checks if two <see cref="T:Jdenticon.Shapes.ShapePosition" /> instances are equal.
            </summary>
      <param name="a">The first <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance to compare.</param>
      <param name="b">The second <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance to compare.</param>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.op_Inequality(Jdenticon.Shapes.ShapePosition,Jdenticon.Shapes.ShapePosition)">
      <summary>
            Checks if two <see cref="T:Jdenticon.Shapes.ShapePosition" /> instances are not equal.
            </summary>
      <param name="a">The first <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance to compare.</param>
      <param name="b">The second <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance to compare.</param>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePosition.ToString">
      <summary>
            Gets a string representation of the <see cref="T:Jdenticon.Shapes.ShapePosition" /> instance.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapePosition.X">
      <summary>
            The x-coordinate of the containing cell.
            </summary>
    </member>
    <member name="P:Jdenticon.Shapes.ShapePosition.Y">
      <summary>
            The y-coordinate of the containing cell.
            </summary>
    </member>
    <member name="T:Jdenticon.Shapes.ShapePositionCollection">
      <summary>
            A collection of <see cref="T:Jdenticon.Shapes.ShapePosition" />.
            </summary>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePositionCollection.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Jdenticon.Shapes.ShapePositionCollection</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Jdenticon.Shapes.ShapePositionCollection.Add(System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Jdenticon.Shapes.ShapePosition" /> with the specified cell coordinates and adds it to the collection.
            </summary>
      <param name="x">The x-coordinate of the containing cell.</param>
      <param name="y">The y-coordinate of the containing cell.</param>
    </member>
  </members>
</doc>